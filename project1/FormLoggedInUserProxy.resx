<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAkACQAAD/2wBDAAcFBQYFBAcGBQYIBwcIChELCgkJChUPEAwRGBUaGRgVGBcb
        HichGx0lHRcYIi4iJSgpKywrGiAvMy8qMicqKyr/2wBDAQcICAoJChQLCxQqHBgcKioqKioqKioqKioq
        KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKir/wAARCABLAToDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD3j+0z/wA8h/31R/aZ/wCeQ/76qhRmgC9/ahx/qh1/vV4RrH7U
        F5petXdinheCVbeVow5vSN2D1xsr2nHr2HNfDXicn/hLNUJ6/an5/wCBUAe4f8NXXv8A0KcGO3+nN/8A
        EUJ+1ZfuwC+EoCScAC+bJ/8AHKsfBTwZ4e1z4dvNrGlWt3O10w82WIFwu1cAE/jXfH4WeDhNHNHo1vE8
        ZypiULj60Aclrf7QXijw5Dby6z4DW0juFzG0l6ef/HKxf+Grr3/oU7f/AMDm/wDiK9W8T+CtF8X21vBr
        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
        V/Z8/ov50f2fP6L+datFAH//2Q==
</value>
  </data>
</root>